#BlueJ class context
comment0.target=DateNodeTest
comment0.text=\n\ The\ test\ class\ DateNodeTest.\n\n\ @author\ \ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=DateNodeTest()
comment1.text=\n\ Default\ constructor\ for\ test\ class\ DateNodeTest\n
comment10.params=
comment10.target=void\ testRemove1()
comment10.text=Remove\ an\ existing\ event
comment11.params=
comment11.target=void\ testRemove2()
comment11.text=Remove\ a\ nonexisting\ event
comment12.params=
comment12.target=void\ testRemove3()
comment2.params=
comment2.target=void\ setUp()
comment2.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\n\ Tears\ down\ the\ test\ fixture.\n\n\ Called\ after\ every\ test\ case\ method.\n
comment4.params=
comment4.target=void\ testAdd1()
comment4.text=node\ is\ out\ of\ range\ of\ event's\ dates\ \=>\ this\ node\ does\ not\ contain\ any\ event\ yet
comment5.params=
comment5.target=void\ testAdd2()
comment6.params=
comment6.target=void\ testAdd3()
comment6.text=node\ is\ in\ range\ of\ event's\ dates\ \=>\ node\ contains\ that\ event\ until\ the\ event\ is\ removed
comment7.params=
comment7.target=void\ testAdd4()
comment7.text=add\ a\ node\ of\ an\ existing\ date\ \=>\ not\ successfully\ adde
comment8.params=
comment8.target=void\ testAdd6()
comment8.text=Add\ an\ event\ to\ a\ node\ twice\ \=>\ only\ one\ is\ added
comment9.params=
comment9.target=void\ testAdd7()
comment9.text=add\ 2\ events\ that\ cover\ the\ date\ of\ the\ node\ \=>\ 2\ events\ are\ added\ to\ the\ node
numComments=13
