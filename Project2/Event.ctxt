#BlueJ class context
comment0.target=Event
comment1.params=name\ startDate\ endDate\ org\ location\ type
comment1.target=Event(java.lang.String,\ java.util.Date,\ java.util.Date,\ java.util.ArrayList,\ java.lang.String,\ java.lang.String)
comment10.params=s1\ s2
comment10.target=int\ compareString(java.lang.String,\ java.lang.String)
comment10.text=compare\ 2\ strings,\ control\ for\ the\ case\ when\ one\ string\ is\ null
comment11.params=d1\ d2
comment11.target=int\ compareDate(java.util.Date,\ java.util.Date)
comment11.text=compare\ 2\ dates,\ control\ for\ the\ case\ when\ one\ date\ is\ null
comment12.params=obj
comment12.target=int\ compareTo(Event)
comment12.text=compare\ 2\ events,\ return\ 0\ if\ all\ data\ of\ 2\ objects\ are\ equal,\ return\ -1\ otherwise
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\ check\ if\ 2\ objects\ are\ equals.\ This\ method\ will\ be\ used\ implicitly\ by\ the\ data\ structures\ in\ contains()\ method\ to\ check\ if\ one\ object\ is\ \n\ in\ the\ list\ or\ the\ tree\n
comment14.params=
comment14.target=java.lang.String\ organizationToString()
comment14.text=print\ list\ of\ organizers\ of\ an\ event
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=print\ an\ event
comment2.params=
comment2.target=Event()
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=get\ methods
comment4.params=
comment4.target=java.util.Date\ getStartDate()
comment5.params=
comment5.target=java.util.Date\ getEndDate()
comment6.params=
comment6.target=java.util.ArrayList\ getOrg()
comment7.params=
comment7.target=java.lang.String\ getLocation()
comment8.params=
comment8.target=java.lang.String\ getType()
comment9.params=orgs1\ orgs2
comment9.target=int\ compareOrganization(java.util.ArrayList,\ java.util.ArrayList)
comment9.text=compare\ 2\ organization\ lists,\ return\ 0\ if\ 2\ organization\ lists\ are\ the\ same,\ return\ -1\ otherwise
numComments=16
