#BlueJ class context
comment0.target=NodeTest
comment1.params=
comment1.target=NodeTest()
comment1.text=\n\ Default\ constructor\ for\ test\ class\ NodeTest\n
comment10.params=
comment10.target=void\ testGetNeighbors2()
comment10.text=a\ node\ that\ has\ multiple\ neighbors
comment11.params=
comment11.target=void\ testContainsEdge1()
comment11.text=a\ node\ having\ no\ outgoing\ edges
comment12.params=
comment12.target=void\ testContainsEdge2()
comment12.text=a\ node\ having\ 1\ outgoing\ edge
comment2.params=
comment2.target=void\ setUp()
comment2.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\n\ Tears\ down\ the\ test\ fixture.\n\n\ Called\ after\ every\ test\ case\ method.\n
comment4.params=
comment4.target=void\ testClosest1()
comment4.text=a\ node\ connected\ to\ nothing\ \=>\ no\ neighbors
comment5.params=
comment5.target=void\ testClosest2()
comment5.text=a\ node\ connected\ to\ 2\ other\ nodes
comment6.params=
comment6.target=void\ testClosest3()
comment6.text=a\ node\ connected\ to\ 3\ nodes
comment7.params=
comment7.target=void\ testEqualsKey()
comment7.text=2\ unequal\ nodes
comment8.params=
comment8.target=void\ testEqualsKey2()
comment8.text=2\ equal\ nodes
comment9.params=
comment9.target=void\ testGetNeighbor1()
comment9.text=a\ node\ that\ has\ no\ neighbors
numComments=13
